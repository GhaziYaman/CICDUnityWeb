name: GameCI Template üéÆ

on:
  push:
    branches:
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license ‚òëÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ‚ò†Ô∏è
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1
  buildWebGL:
    needs: checkLicense
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL
    outputs:
      test: ${{ steps.saveVersionStep.outputs.test }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        id: buildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - run: echo "Built the game for ${{ steps.buildStep.outputs.buildVersion }} "
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.buildStep.outputs.buildVersion }}
          path: build/${{ matrix.targetPlatform }}
      - id: saveVersionStep
        run: echo "test=${{ steps.buildStep.outputs.buildVersion }}" >> $GITHUB_OUTPUT
  UploadToBuilds:
    strategy:
      matrix:
        targetPlatform:
          - WebGL
    runs-on: ubuntu-latest
    needs: buildWebGL
    steps:
      - run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: Build-${{ matrix.targetPlatform }}-${{ needs.buildWebGL.outputs.test }}

      - name: List Files
        run: ls -R
        # with:
        #   name: Build-${{ matrix.targetPlatform }}-${{ needs.buildWebGL.outputs.test }}

      - name: Commit and push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Add artifact for ${{ matrix.targetPlatform }}"
          git push
